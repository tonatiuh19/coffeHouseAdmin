{"version":3,"sources":["logo.svg","resources/images/logo.png","api/functionApis.jsx","components/Login.jsx","utilities/Loading.jsx","components/content/Products.jsx","components/content/Start.jsx","components/content/Packs.jsx","utils/functions/decodeUtf8.jsx","utils/functions/getUser.jsx","components/content/Sales.jsx","components/AddressForm/AddressForm.jsx","components/content/Welcome.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["signIn","email","password","axios","post","pwd","response","data","Error","getAddressUser","getUserData","getUserSales","getUserProducts","userEmail","getCountries","getTypesProducts","updateProducs","emailUser","name","description","descriptionLong","idCountry","price","quantity","idProduct","idProductType","acidezType","cuerpoType","saborType","replace","long_description","id_country","id_products","id_product_type","id_product_f_acidez_types","id_product_f_cuerpo_types","id_product_f_sabor_types","newProduct","newAddress","street","no","noInt","city","state","cp","colony","deactivateProduct","getProductImage","getCountUserProducts","getUserPacks","newPack","newPackProductsIds","idCampaign","id_campaign","getPacksUserProductsIds","updatePack","Login","useState","setEmail","setPassword","erroMessage","setErrorMessage","error","setError","loading","setLoading","history","useHistory","signInValidation","test","String","toLowerCase","validateEmail","then","x","localStorage","setItem","push","catch","console","log","finally","useEffect","getItem","className","href","src","Logo","alt","type","placeholder","onChange","e","target","value","role","onClick","style","display","justifyContent","alignItems","icon","faCoffee","pulse","Loading","size","Products","products","setProducts","countries","setCountries","productTypes","setProductTypes","noProducts","setNoProducts","loadingEdit","setLoadingEdit","showEdit","setShowEdit","titleEdit","setTitleEdit","nameEdit","setNameEdit","descriptionEdit","setDescriptionEdit","descriptionLongEdit","setLongDescriptionEdit","idCountryEdit","setIdCountryEdit","priceEdit","setPriceEdit","quantityEdit","setQuantityEdit","idProductEdit","setIdProductEdit","idProductTypeEdit","setIdProductTypeEdit","productSaborEdit","setProductSaborEdit","productCuerpoEdit","setProductCuerpoEdit","productAcidezEdit","setProductAcidezEdit","nameEditValidation","setNameEditValidation","descriptionEditValidation","setDescriptionEditValidation","descriptionLongEditValidation","setLongDescriptionEditValidation","priceEditValidation","setPriceEditValidation","quantityEditValidation","setQuantityEditValidation","loadingNew","setLoadingNew","formValidated","setFormValidated","showNew","setShowNew","titleNew","nameNew","setNameNew","descriptionNew","setDescriptionNew","descriptionLongNew","setLongDescriptionNew","idCountryNew","setIdCountryNew","priceNew","setPriceNew","quantityNew","setQuantityNew","idProductTypeNew","setIdProductTypeNew","productSaborNew","setProductSaborNew","productCuerpoNew","setProductCuerpoNew","productAcidezNew","setProductAcidezNew","newProductItem","setNewProductItem","nameNewValidation","setNameNewValidation","descriptionNewValidation","setDescriptionNewValidation","descriptionLongNewValidation","setLongDescriptionNewValidation","priceNewValidation","setPriceNewValidation","quantityNewValidation","setQuantityNewValidation","showCancel","setShowCancel","idProductDelete","setIdProductDelete","showImage","setShowImage","productImage","setProductImage","loadingImage","setLoadingImage","preview","raw","image","setImage","idProductImage","setIdProductImage","errorImage","setErrorImage","errorImageText","setErrorImageText","showAlertImgNew","setShowAlertImgNew","handleCloseNew","handleShowNew","sendNewForm","getUser","handleCloseEdit","sendEditForm","handleShowEditImage","item","decode_utf8","handleCloseImgNew","handleCloseImage","handleCloseCancel","loggedInUser","handleUploadImage","preventDefault","formData","FormData","append","headers","res","status","s","decodeURIComponent","escape","acidezTypes","Modal","show","onHide","backdrop","keyboard","Header","closeButton","Title","Footer","Button","variant","Body","Form","Group","controlId","Label","Control","required","class","as","defaultValue","InputGroup","hasValidation","Prepend","Text","id","map","Object","keys","rows","country","selected","width","htmlFor","height","files","length","URL","createObjectURL","scope","index","active","faExclamationTriangle","y","handleShowEdit","faPencilAlt","faImage","handleShowCancel","faTrashAlt","Start","Packs","noPacks","setNoPacks","packs","setPacks","productsCount","setProductsCount","productsToAdd","setProductsToAdd","titleModal","setTitleModal","longDescriptionNew","productPack","setProductPack","newPackItem","setNewPackItem","setDescriptionLongNewValidation","stockEmpty","setStockEmpty","longDescriptionEdit","productPackEdit","setProductPackEdit","idPack","setIdPack","formValidatedEdit","setFormValidatedEdit","setDescriptionLongEditValidation","stockEmptyEdit","setStockEmptyEdit","key","validated","stock","validateEditForm","Promise","all","promisesProductsPack","results","promises","validateNewForm","validateQuantity","prd","Number","addProducts","idProducts","split","count","Row","Col","sm","max","prdAdd","keyy","decodeUtf8","Sales","noSales","setNoSales","sales","setSales","label","id_orders","first_name","last_name","complete","shipment_label_url","AddressForm","updateAddress","useForm","register","handleSubmit","errors","formState","loadingForm","setloadingForm","onSubmit","disabled","Welcome","user","setUser","fullName","setFullName","errorMessage","hasAddress","setHasAddress","faTools","to","clear","title","faPowerOff","minHeight","paddingTop","path","App","document","basename","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5596c48c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/logo.5fbcd817.png\";","import axios from \"axios\";\n\n//Production\nexport const signIn = async (email, password) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/login.php\",\n      {\n        email: email,\n        pwd: password,\n      }\n    );\n    if (response.data === 0) {\n      return false;\n    } else {\n      return response.data;\n    }\n  } catch (e) {\n    throw new Error(`😱 Request failed: ${e}`);\n  }\n};\n\nexport const getAddressUser = async (email) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/getAddressUser.php\",\n      {\n        email: email,\n      }\n    );\n    if (response.data === 0) {\n      return false;\n    } else {\n      return response.data;\n    }\n  } catch (e) {\n    throw new Error(`😱 Request failed: ${e}`);\n  }\n};\n\nexport const getUserData = async (email) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/getUserData.php\",\n      {\n        email: email,\n      }\n    );\n    if (response.data === 0) {\n      return false;\n    } else {\n      return response.data;\n    }\n  } catch (e) {\n    throw new Error(`😱 Request failed: ${e}`);\n  }\n};\n\nexport const getUserSales = async (email) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/getUserSales.php\",\n      {\n        email: email,\n      }\n    );\n    if (response.data === 0) {\n      return false;\n    } else {\n      return response.data;\n    }\n  } catch (e) {\n    throw new Error(`😱 Request failed: ${e}`);\n  }\n};\n\nexport const getUserProducts = async (userEmail) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/getProductsUser.php\",\n      {\n        email: userEmail,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getCountries = async () => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/getCountries.php\"\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getTypesProducts = async () => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/getTypesProducts.php\"\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const updateProducs = async (\n  emailUser,\n  name,\n  description,\n  descriptionLong,\n  idCountry,\n  price,\n  quantity,\n  idProduct,\n  idProductType,\n  acidezType,\n  cuerpoType,\n  saborType\n) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/updateProductsUser.php\",\n      {\n        email: emailUser,\n        name: name,\n        description: description.replace(/\\n|\\r/g, \"\"),\n        long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n        id_country: idCountry,\n        price: price,\n        quantity: quantity,\n        id_products: idProduct,\n        id_product_type: idProductType,\n        id_product_f_acidez_types: acidezType,\n        id_product_f_cuerpo_types: cuerpoType,\n        id_product_f_sabor_types: saborType,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const newProduct = async (\n  emailUser,\n  name,\n  description,\n  idProductType,\n  idCountry,\n  descriptionLong,\n  quantity,\n  price,\n  acidezType,\n  cuerpoType,\n  saborType\n) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/insertNewProduct.php\",\n      {\n        email: emailUser,\n        name: name,\n        description: description.replace(/\\n|\\r/g, \"\"),\n        id_product_type: idProductType,\n        id_country: idCountry,\n        long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n        quantity: quantity,\n        price: price,\n        id_product_f_acidez_types: acidezType,\n        id_product_f_cuerpo_types: cuerpoType,\n        id_product_f_sabor_types: saborType,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const newAddress = async (\n  emailUser,\n  street,\n  no,\n  noInt,\n  city,\n  state,\n  cp,\n  colony,\n  description\n) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/insertNewAddress.php\",\n      {\n        email: emailUser,\n        street: street,\n        no: no,\n        noInt: noInt,\n        city: city,\n        state: state,\n        description: description.replace(/\\n|\\r/g, \"\"),\n        cp: cp,\n        colony: colony,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const deactivateProduct = async (idProduct) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/deactivateProduct.php\",\n      {\n        id_products: idProduct,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getProductImage = async (idProduct) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8016/dashboard/user/getImage.php\",\n      {\n        id_products: idProduct,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const uploadFile = async (file) => {\n  const formData = {\n    id_products: file,\n  };\n\n  formData.append(\"avatar\", file);\n\n  return await axios.post(\n    \"http://localhost:8016/dashboard/user/uploadImage.php\",\n    formData,\n    {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    }\n  );\n};\n\nexport const getCountUserProducts = async (userEmail) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/getCountProductUser.php\",\n      {\n        email: userEmail,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getUserPacks = async (userEmail) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/getPacksUser.php\",\n      {\n        email: userEmail,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const newPack = async (\n  emailUser,\n  name,\n  description,\n  descriptionLong,\n  quantity,\n  price\n) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/insertPack.php\",\n      {\n        email: emailUser,\n        name: name,\n        description: description.replace(/\\n|\\r/g, \"\"),\n        long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n        quantity: quantity,\n        price: price,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const newPackProductsIds = async (idProduct, idCampaign, quantity) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/insertPackProductsId.php\",\n      {\n        id_products: idProduct,\n        id_campaign: idCampaign,\n        quantity: quantity,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getPacksUserProductsIds = async (idProduct) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/getPacksUserProductsIds.php\",\n      {\n        id_products: idProduct,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const updatePack = async (\n  emailUser,\n  idProduct,\n  name,\n  description,\n  descriptionLong,\n  quantity,\n  price\n) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/updatePack.php\",\n      {\n        email: emailUser,\n        id_products: idProduct,\n        name: name,\n        description: description.replace(/\\n|\\r/g, \"\"),\n        long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n        quantity: quantity,\n        price: price,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const updatePackProductsIds = async (\n  idProduct,\n  idCampaign,\n  quantity\n) => {\n  try {\n    const response = await axios.post(\n      \"https://bolsadecafe.com/proveedores/api/updatePackProductsId.php\",\n      {\n        id_products: idProduct,\n        id_campaign: idCampaign,\n        quantity: quantity,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\n//Testing\n/*export const signIn = async (email, password) => {\n  try {\n    const response = await axios.post(\"http://localhost:8015/login.php\", {\n      email: email,\n      pwd: password,\n    });\n    if (response.data === 0) {\n      return false;\n    } else {\n      return response.data;\n    }\n  } catch (e) {\n    throw new Error(`😱 Request failed: ${e}`);\n  }\n};\n\nexport const getAddressUser = async (email) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/getAddressUser.php\",\n      {\n        email: email,\n      }\n    );\n    if (response.data === 0) {\n      return false;\n    } else {\n      return response.data;\n    }\n  } catch (e) {\n    throw new Error(`😱 Request failed: ${e}`);\n  }\n};\n\nexport const getUserData = async (email) => {\n  try {\n    const response = await axios.post(\"http://localhost:8015/getUserData.php\", {\n      email: email,\n    });\n    if (response.data === 0) {\n      return false;\n    } else {\n      return response.data;\n    }\n  } catch (e) {\n    throw new Error(`😱 Request failed: ${e}`);\n  }\n};\n\nexport const getUserSales = async (email) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/getUserSales.php\",\n      {\n        email: email,\n      }\n    );\n    if (response.data === 0) {\n      return false;\n    } else {\n      return response.data;\n    }\n  } catch (e) {\n    throw new Error(`😱 Request failed: ${e}`);\n  }\n};\n\nexport const getUserProducts = async (userEmail) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/getProductsUser.php\",\n      {\n        email: userEmail,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getCountries = async () => {\n  try {\n    const response = await axios.post(\"http://localhost:8015/getCountries.php\");\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getTypesProducts = async () => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/getTypesProducts.php\"\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const updateProducs = async (\n  emailUser,\n  name,\n  description,\n  descriptionLong,\n  idCountry,\n  price,\n  quantity,\n  idProduct,\n  idProductType,\n  acidezType,\n  cuerpoType,\n  saborType\n) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/updateProductsUser.php\",\n      {\n        email: emailUser,\n        name: name,\n        description: description.replace(/\\n|\\r/g, \"\"),\n        long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n        id_country: idCountry,\n        price: price,\n        quantity: quantity,\n        id_products: idProduct,\n        id_product_type: idProductType,\n        id_product_f_acidez_types: acidezType,\n        id_product_f_cuerpo_types: cuerpoType,\n        id_product_f_sabor_types: saborType,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const newProduct = async (\n  emailUser,\n  name,\n  description,\n  idProductType,\n  idCountry,\n  descriptionLong,\n  quantity,\n  price,\n  acidezType,\n  cuerpoType,\n  saborType\n) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/insertNewProduct.php\",\n      {\n        email: emailUser,\n        name: name,\n        description: description.replace(/\\n|\\r/g, \"\"),\n        id_product_type: idProductType,\n        id_country: idCountry,\n        long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n        quantity: quantity,\n        price: price,\n        id_product_f_acidez_types: acidezType,\n        id_product_f_cuerpo_types: cuerpoType,\n        id_product_f_sabor_types: saborType,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const newAddress = async (\n  emailUser,\n  street,\n  no,\n  noInt,\n  city,\n  state,\n  cp,\n  colony,\n  description\n) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/insertNewAddress.php\",\n      {\n        email: emailUser,\n        street: street,\n        no: no,\n        noInt: noInt,\n        city: city,\n        state: state,\n        description: description.replace(/\\n|\\r/g, \"\"),\n        cp: cp,\n        colony: colony,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const deactivateProduct = async (idProduct) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/deactivateProduct.php\",\n      {\n        id_products: idProduct,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getProductImage = async (idProduct) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8016/dashboard/user/getImage.php\",\n      {\n        id_products: idProduct,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const uploadFile = async (file) => {\n  const formData = {\n    id_products: file,\n  };\n\n  formData.append(\"avatar\", file);\n\n  return await axios.post(\n    \"http://localhost:8016/dashboard/user/uploadImage.php\",\n    formData,\n    {\n      headers: {\n        \"content-type\": \"multipart/form-data\",\n      },\n    }\n  );\n};\n\nexport const getCountUserProducts = async (userEmail) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/getCountProductUser.php\",\n      {\n        email: userEmail,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getUserPacks = async (userEmail) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/getPacksUser.php\",\n      {\n        email: userEmail,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const newPack = async (\n  emailUser,\n  name,\n  description,\n  descriptionLong,\n  quantity,\n  price\n) => {\n  try {\n    const response = await axios.post(\"http://localhost:8015/insertPack.php\", {\n      email: emailUser,\n      name: name,\n      description: description.replace(/\\n|\\r/g, \"\"),\n      long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n      quantity: quantity,\n      price: price,\n    });\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const newPackProductsIds = async (idProduct, idCampaign, quantity) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/insertPackProductsId.php\",\n      {\n        id_products: idProduct,\n        id_campaign: idCampaign,\n        quantity: quantity,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const getPacksUserProductsIds = async (idProduct) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/getPacksUserProductsIds.php\",\n      {\n        id_products: idProduct,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const updatePack = async (\n  emailUser,\n  idProduct,\n  name,\n  description,\n  descriptionLong,\n  quantity,\n  price\n) => {\n  try {\n    const response = await axios.post(\"http://localhost:8015/updatePack.php\", {\n      email: emailUser,\n      id_products: idProduct,\n      name: name,\n      description: description.replace(/\\n|\\r/g, \"\"),\n      long_description: descriptionLong.replace(/\\n|\\r/g, \"\"),\n      quantity: quantity,\n      price: price,\n    });\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};\n\nexport const updatePackProductsIds = async (\n  idProduct,\n  idCampaign,\n  quantity\n) => {\n  try {\n    const response = await axios.post(\n      \"http://localhost:8015/updatePackProductsId.php\",\n      {\n        id_products: idProduct,\n        id_campaign: idCampaign,\n        quantity: quantity,\n      }\n    );\n    return response.data;\n  } catch (e) {\n    return `😱 Request failed: ${e}`;\n  }\n};*/\n","import React, { useState, useEffect } from \"react\";\nimport \"../css/Login/login.css\";\nimport Logo from \"../resources/images/logo.png\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCoffee } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHistory } from \"react-router-dom\";\nimport { signIn } from \"../api/functionApis\";\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [erroMessage, setErrorMessage] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [user, setUser] = useState([]);\n  const history = useHistory();\n\n  const signInValidation = () => {\n    if (email === \"\" || password === \"\") {\n      setError(true);\n      setErrorMessage(\"Necesitas incluir tu correo y contraseña\");\n    } else {\n      if (validateEmail(email)) {\n        setError(false);\n        setLoading(true);\n        signIn(email, password)\n          .then((x) => {\n            //console.log(x);\n            if (x) {\n              //console.log(x[0]);\n              localStorage.setItem(\"08191993\", x[0].email);\n              history.push(\"/bienvenido\");\n            } else {\n              setError(true);\n              setErrorMessage(\"Email o contraseña incorrectos\");\n            }\n          })\n          .catch((x) => {\n            setError(true);\n            setErrorMessage(`😱 Request failed: ${x}`);\n            console.log(`😱 Request failed: ${x}`);\n          })\n          .finally(() => setLoading(false));\n      } else {\n        setError(true);\n        setErrorMessage(\"El correo es incorrecto\");\n      }\n    }\n  };\n\n  function validateEmail(email) {\n    const re =\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  const session = () => {\n    const loggedInUser = localStorage.getItem(\"08191993\");\n    if (loggedInUser) {\n      history.push(\"/bienvenido\");\n    }\n  };\n\n  useEffect(() => {\n    // creamos una función para actualizar el estado con el clientWidth\n    session();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"auth-wrapper\">\n        <div className=\"auth-inner\">\n          <div>\n            <a href=\"https://bolsadecafe.com/\">\n              <img\n                src={Logo}\n                className=\"img-fluid\"\n                alt=\"Responsive image\"\n              ></img>\n            </a>\n            <h3></h3>\n\n            <div className=\"form-group\">\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                placeholder=\"Correo electronico\"\n                onChange={(e) => setEmail(e.target.value)}\n                value={email}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                placeholder=\"Contraseña\"\n                onChange={(e) => setPassword(e.target.value)}\n                value={password}\n              />\n            </div>\n            {error ? (\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {erroMessage}\n              </div>\n            ) : null}\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary btn-block\"\n              onClick={() => signInValidation()}\n            >\n              Entrar\n            </button>\n            <p className=\"forgot-password text-right\">\n              {/*<a href=\"#\">Olvide mi contraseña</a>*/}\n            </p>\n            {loading ? (\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <FontAwesomeIcon icon={faCoffee} pulse />\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport '../css/welcome.css';\n\nconst Loading = () => {\n    return (\n        <div className=\"loadingFull\">\n            <FontAwesomeIcon icon={faCoffee} size=\"lg\" pulse />\n        </div>\n    )\n}\n\nexport default Loading\n","import React, { useEffect, useState } from \"react\";\nimport Loading from \"../../utilities/Loading\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPencilAlt,\n  faTrashAlt,\n  faImage,\n  faExclamationTriangle,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Modal, Button, Form, InputGroup } from \"react-bootstrap\";\nimport {\n  getUserProducts,\n  getCountries,\n  updateProducs,\n  deactivateProduct,\n  getProductImage,\n  getTypesProducts,\n  newProduct,\n} from \"../../api/functionApis\";\n\nconst Products = () => {\n  const [loading, setLoading] = useState(true);\n  const [products, setProducts] = useState([]);\n  const [countries, setCountries] = useState([]);\n  const [productTypes, setProductTypes] = useState([]);\n  const [noProducts, setNoProducts] = useState(true);\n\n  //EditModal\n  const [loadingEdit, setLoadingEdit] = useState(false);\n  const [showEdit, setShowEdit] = useState(false);\n  const [titleEdit, setTitleEdit] = useState(\"\");\n  const [nameEdit, setNameEdit] = useState(\"\");\n  const [descriptionEdit, setDescriptionEdit] = useState(\"\");\n  const [descriptionLongEdit, setLongDescriptionEdit] = useState(\"\");\n  const [idCountryEdit, setIdCountryEdit] = useState(0);\n  const [priceEdit, setPriceEdit] = useState(\"\");\n  const [quantityEdit, setQuantityEdit] = useState(0);\n  const [idProductEdit, setIdProductEdit] = useState(0);\n  const [idProductTypeEdit, setIdProductTypeEdit] = useState(1);\n  const [productSaborEdit, setProductSaborEdit] = useState(0);\n  const [productCuerpoEdit, setProductCuerpoEdit] = useState(0);\n  const [productAcidezEdit, setProductAcidezEdit] = useState(0);\n\n  const [nameEditValidation, setNameEditValidation] = useState(false);\n  const [descriptionEditValidation, setDescriptionEditValidation] =\n    useState(false);\n  const [descriptionLongEditValidation, setLongDescriptionEditValidation] =\n    useState(false);\n  const [priceEditValidation, setPriceEditValidation] = useState(false);\n  const [quantityEditValidation, setQuantityEditValidation] = useState(false);\n\n  //NewModal\n  const [loadingNew, setLoadingNew] = useState(false);\n  const [formValidated, setFormValidated] = useState(false);\n  const [showNew, setShowNew] = useState(false);\n  const [titleNew, setTitleNew] = useState(\"Nuevo producto\");\n  const [nameNew, setNameNew] = useState(\"\");\n  const [descriptionNew, setDescriptionNew] = useState(\"\");\n  const [descriptionLongNew, setLongDescriptionNew] = useState(\"\");\n  const [idCountryNew, setIdCountryNew] = useState(1);\n  const [priceNew, setPriceNew] = useState(\"\");\n  const [quantityNew, setQuantityNew] = useState(0);\n  const [idProductNew, setIdProductNew] = useState(0);\n  const [idProductTypeNew, setIdProductTypeNew] = useState(1);\n  const [productSaborNew, setProductSaborNew] = useState(0);\n  const [productCuerpoNew, setProductCuerpoNew] = useState(0);\n  const [productAcidezNew, setProductAcidezNew] = useState(0);\n  const [newProductItem, setNewProductItem] = useState([]);\n\n  const [nameNewValidation, setNameNewValidation] = useState(false);\n  const [descriptionNewValidation, setDescriptionNewValidation] =\n    useState(false);\n  const [descriptionLongNewValidation, setLongDescriptionNewValidation] =\n    useState(false);\n  const [priceNewValidation, setPriceNewValidation] = useState(false);\n  const [quantityNewValidation, setQuantityNewValidation] = useState(false);\n\n  //DeactivateModal\n  const [showCancel, setShowCancel] = useState(false);\n  const [idProductDelete, setIdProductDelete] = useState(0);\n\n  //ImageEditModal\n  const [showImage, setShowImage] = useState(false);\n  const [productImage, setProductImage] = useState(\"\");\n  const [loadingImage, setLoadingImage] = useState(false);\n  const [image, setImage] = useState({ preview: \"\", raw: \"\" });\n  const [idProductImage, setIdProductImage] = useState(0);\n  const [errorImage, setErrorImage] = useState(false);\n  const [errorImageText, setErrorImageText] = useState(\"Error\");\n\n  //ImageNewAlert\n  const [showAlertImgNew, setShowAlertImgNew] = useState(false);\n\n  const handleCloseNew = () => setShowNew(false);\n\n  const handleShowNew = () => {\n    setNameNew(\"\");\n    setDescriptionNew(\"\");\n    setLongDescriptionNew(\"\");\n    setPriceNew(\"\");\n    setQuantityNew(0);\n    setLoadingNew(true);\n    setShowNew(true);\n    getCountries()\n      .then((x) => {\n        setCountries(x);\n        getTypesProducts().then((x) => {\n          setProductTypes(x);\n        });\n      })\n      .finally(() => {\n        setLoadingNew(false);\n      });\n  };\n\n  const validationNewForm = () => {\n    if (nameNew === \"\") {\n      setNameNewValidation(true);\n      setFormValidated(true);\n      return false;\n    } else {\n      setNameNewValidation(false);\n    }\n    if (descriptionNew === \"\") {\n      setDescriptionNewValidation(true);\n      setFormValidated(true);\n      return false;\n    } else {\n      setDescriptionNewValidation(false);\n    }\n    if (descriptionLongNew === \"\") {\n      setLongDescriptionNewValidation(true);\n      setFormValidated(true);\n      return false;\n    } else {\n      setLongDescriptionNewValidation(false);\n    }\n    if (priceNew === \"\" || priceNew == 0) {\n      setPriceNewValidation(true);\n      setFormValidated(true);\n      return false;\n    } else {\n      setPriceNewValidation(false);\n    }\n    if (quantityNew === \"\" || quantityNew == 0) {\n      setQuantityNewValidation(true);\n      setFormValidated(true);\n      return false;\n    } else {\n      setQuantityNewValidation(false);\n    }\n    setFormValidated(false);\n    return true;\n  };\n\n  const sendNewForm = () => {\n    if (validationNewForm()) {\n      setShowNew(false);\n      setLoading(true);\n      newProduct(\n        getUser(),\n        nameNew,\n        descriptionNew,\n        idProductTypeNew,\n        idCountryNew,\n        descriptionLongNew,\n        quantityNew,\n        priceNew,\n        productAcidezNew,\n        productCuerpoNew,\n        productSaborNew\n      ).then((x) => {\n        getUserProducts(getUser())\n          .then((x) => {\n            if (x !== \"No results\") {\n              setNoProducts(false);\n              setProducts(x);\n            } else {\n              setNoProducts(true);\n            }\n          })\n          .finally(() => {\n            setLoading(false);\n            setNewProductItem(x[0]);\n            setShowAlertImgNew(true);\n          });\n      });\n    }\n  };\n\n  const handleCloseEdit = () => setShowEdit(false);\n\n  const handleShowEdit = (item) => {\n    setLoadingEdit(true);\n    setShowEdit(true);\n    getCountries()\n      .then((x) => {\n        setCountries(x);\n        setIdProductTypeEdit(item.id_product_type);\n        setProductSaborEdit(item.id_product_f_sabor_types);\n        setProductCuerpoEdit(item.id_product_f_cuerpo_types);\n        setProductAcidezEdit(item.id_product_f_acidez_types);\n        setIdCountryEdit(item.id_country);\n        setIdProductEdit(item.id_products);\n        setTitleEdit(\n          \"#\" + item.id_products + \" \" + \"-\" + \" \" + decode_utf8(item.name)\n        );\n        setNameEdit(decode_utf8(item.name));\n        setPriceEdit(item.price);\n        setQuantityEdit(item.quantity);\n        setDescriptionEdit(decode_utf8(item.description));\n        setLongDescriptionEdit(decode_utf8(item.long_description));\n        getTypesProducts().then((y) => {\n          setProductTypes(y);\n        });\n      })\n      .finally(() => {\n        setLoadingEdit(false);\n      });\n  };\n\n  const validationEditForm = () => {\n    let rValue = false;\n    if (nameEdit === \"\") {\n      setNameEditValidation(true);\n      return false;\n    } else {\n      setNameEditValidation(false);\n    }\n    if (descriptionEdit === \"\") {\n      setDescriptionEditValidation(true);\n      return false;\n    } else {\n      setDescriptionEditValidation(false);\n    }\n    if (descriptionLongEdit === \"\") {\n      setLongDescriptionEditValidation(true);\n      return false;\n    } else {\n      setLongDescriptionEditValidation(false);\n    }\n    if (priceEdit === \"\" || priceEdit == 0) {\n      setPriceEditValidation(true);\n      return false;\n    } else {\n      setPriceEditValidation(false);\n    }\n    if (quantityEdit === \"\" || quantityEdit == 0) {\n      setQuantityEditValidation(true);\n      return false;\n    } else {\n      setQuantityEditValidation(false);\n    }\n    return true;\n  };\n\n  const sendEditForm = () => {\n    if (validationEditForm()) {\n      setShowEdit(false);\n      setLoading(true);\n      updateProducs(\n        getUser(),\n        nameEdit,\n        descriptionEdit,\n        descriptionLongEdit,\n        idCountryEdit,\n        priceEdit,\n        quantityEdit,\n        idProductEdit,\n        idProductTypeEdit,\n        productAcidezEdit,\n        productCuerpoEdit,\n        productSaborEdit\n      ).then(() => {\n        getUserProducts(getUser())\n          .then((x) => {\n            if (x !== \"No results\") {\n              setNoProducts(false);\n              setProducts(x);\n            } else {\n              setNoProducts(true);\n            }\n          })\n          .finally(() => setLoading(false));\n      });\n    }\n  };\n\n  const handleShowEditImage = (item) => {\n    setTitleEdit(\n      \"#\" + item.id_products + \" \" + \"-\" + \" \" + decode_utf8(item.name)\n    );\n    setImage({ preview: \"\", raw: \"\" });\n    setShowImage(true);\n    setLoadingImage(true);\n    setIdProductImage(item.id_products);\n    getProductImage(item.id_products)\n      .then((x) => setProductImage(x))\n      .finally(() => setLoadingImage(false));\n  };\n\n  const handleCloseImgNew = () => setShowAlertImgNew(false);\n\n  const handleCloseImage = () => setShowImage(false);\n\n  const handleCloseCancel = () => setShowCancel(false);\n\n  const handleShowCancel = (item) => {\n    setShowCancel(true);\n    setIdProductDelete(item.id_products);\n  };\n\n  const deleteProduct = () => {\n    setShowCancel(false);\n    setLoading(true);\n    deactivateProduct(idProductDelete).then(() => {\n      getUserProducts(getUser())\n        .then((x) => {\n          if (x !== \"No results\") {\n            setNoProducts(false);\n            setProducts(x);\n          } else {\n            setNoProducts(true);\n          }\n        })\n        .finally(() => setLoading(false));\n    });\n  };\n\n  const getUser = () => {\n    const loggedInUser = localStorage.getItem(\"08191993\");\n    console.log(loggedInUser);\n    return loggedInUser;\n  };\n\n  const handleChangeImage = (e) => {\n    if (e.target.files.length) {\n      setImage({\n        preview: URL.createObjectURL(e.target.files[0]),\n        raw: e.target.files[0],\n      });\n    }\n  };\n\n  const handleUploadImage = async (e) => {\n    e.preventDefault();\n    setLoadingImage(true);\n    const formData = new FormData();\n    formData.append(\"avatar\", image.raw);\n    formData.append(\"id_products\", idProductImage);\n\n    axios\n      .post(\n        \"https://bolsadecafe.com/dashboard/user/uploadImage.php\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      )\n      .then(function (res) {\n        //console.log('SUCCESS!!', res.data);\n        if (res.data.status == 1) {\n          getUserProducts(getUser())\n            .then((x) => setProducts(x))\n            .finally(() => {\n              setLoadingImage(false);\n              setShowImage(false);\n            });\n        } else if (res.data.status == 2) {\n          setLoadingImage(false);\n          setErrorImage(true);\n          setErrorImageText(\"Servicio actualmente no disponible\");\n        } else if (res.data.status == 3) {\n          setLoadingImage(false);\n          setErrorImage(true);\n          setErrorImageText(\"El tipo de archivo no es permitido\");\n        }\n      })\n      .catch(function () {\n        console.log(\"FAILURE!!\");\n      });\n  };\n\n  useEffect(() => {\n    getUserProducts(getUser())\n      .then((x) => {\n        console.log(\"hola\", x);\n        if (x !== \"No results\") {\n          setNoProducts(false);\n          setProducts(x);\n        } else {\n          setNoProducts(true);\n        }\n      })\n      .finally(() => setLoading(false));\n  }, []);\n\n  function decode_utf8(s) {\n    return decodeURIComponent(escape(s));\n  }\n\n  const acidezTypes = (x) => {\n    if (x == \"5\") {\n      return \"5 - Acidez Alta\";\n    } else if (x == \"1\") {\n      return \"1 - Acidez muy baja\";\n    }\n    return x;\n  };\n\n  return (\n    <div>\n      {loading ? (\n        <Loading></Loading>\n      ) : (\n        <div className=\"mt-3\">\n          <Modal\n            show={showAlertImgNew}\n            onHide={handleCloseImgNew}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>\n                Para que el producto sea visible en TienditaCafe, necesitas\n                incluir una imagen del producto.\n              </Modal.Title>\n            </Modal.Header>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseImgNew}>\n                Despues\n              </Button>\n              <Button\n                variant=\"primary\"\n                onClick={() => {\n                  setShowAlertImgNew(false);\n                  handleShowEditImage(newProductItem);\n                }}\n              >\n                Subir imagen\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Modal\n            show={showNew}\n            size=\"lg\"\n            onHide={handleCloseNew}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>{titleNew}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {loadingNew ? (\n                <Loading></Loading>\n              ) : (\n                <Form>\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Nombre del producto</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      placeholder=\"Cafe Nuevo, Taza nueva, etc.\"\n                      onChange={(e) => {\n                        setNameNew(e.target.value);\n                      }}\n                    />\n                    {nameNewValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir un nombre\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Tipo de producto</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"select\"\n                      defaultValue=\"1\"\n                      onChange={(e) => {\n                        setIdProductTypeNew(e.target.value);\n                      }}\n                    >\n                      <option value=\"1\">Bolsa</option>\n                      <option value=\"3\">Paquete</option>\n                    </Form.Control>\n                  </Form.Group>\n                  <Form.Group controlId=\"validationCustomUsername\">\n                    <Form.Label>Precio</Form.Label>\n                    <InputGroup hasValidation>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroupPrepend\">\n                          $\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        required\n                        placeholder=\"100\"\n                        type=\"number\"\n                        onChange={(e) => {\n                          setPriceNew(e.target.value);\n                        }}\n                      />\n                    </InputGroup>\n                    {priceNewValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir el precio mayor a 0\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Stock</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"number\"\n                      placeholder=\"300\"\n                      onChange={(e) => {\n                        setQuantityNew(e.target.value);\n                      }}\n                    />\n                    {quantityNewValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir stock mayor a 0\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  {idProductTypeNew == 1 ? (\n                    <>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Cuerpo</Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          defaultValue={1}\n                          onChange={(e) => {\n                            setProductCuerpoNew(e.target.value);\n                          }}\n                        >\n                          {productTypes.map((x) => {\n                            if (\n                              Object.keys(x)[0] === \"id_product_f_cuerpo_types\"\n                            ) {\n                              return (\n                                <option\n                                  value={x.id_product_f_cuerpo_types}\n                                  key={x.id_product_f_cuerpo_types}\n                                >\n                                  {decode_utf8(x.value)}\n                                </option>\n                              );\n                            }\n                          })}\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Sabor</Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          defaultValue={1}\n                          onChange={(e) => {\n                            setProductSaborNew(e.target.value);\n                          }}\n                        >\n                          {productTypes.map((x) => {\n                            if (\n                              Object.keys(x)[0] === \"id_product_f_sabor_types\"\n                            ) {\n                              return (\n                                <option\n                                  value={x.id_product_f_sabor_types}\n                                  key={x.id_product_f_sabor_types}\n                                >\n                                  {decode_utf8(x.value)}\n                                </option>\n                              );\n                            }\n                          })}\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Acidez</Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          defaultValue={1}\n                          onChange={(e) => {\n                            setProductAcidezNew(e.target.value);\n                          }}\n                        >\n                          {productTypes.map((x) => {\n                            if (\n                              Object.keys(x)[0] === \"id_product_f_acidez_types\"\n                            ) {\n                              return (\n                                <option\n                                  value={x.id_product_f_acidez_types}\n                                  key={x.id_product_f_acidez_types}\n                                >\n                                  {acidezTypes(x.value)}\n                                </option>\n                              );\n                            }\n                          })}\n                        </Form.Control>\n                      </Form.Group>\n                    </>\n                  ) : null}\n\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Descripción corta del producto</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"textarea\"\n                      placeholder=\"Descripcion corta donde se describa en menos de 30 caracteres tu producto\"\n                      rows={3}\n                      defaultValue={descriptionNew}\n                      onChange={(e) => {\n                        setDescriptionNew(e.target.value);\n                      }}\n                    />\n                    {descriptionNewValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir una descripcion\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Descripción larga del producto</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"textarea\"\n                      rows={3}\n                      placeholder=\"Descripcion completa del producto\"\n                      defaultValue={descriptionLongNew}\n                      onChange={(e) => {\n                        setLongDescriptionNew(e.target.value);\n                      }}\n                    />\n                    {descriptionLongNewValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir una descripcion mas amplia\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Pais</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"select\"\n                      defaultValue={1}\n                      onChange={(e) => {\n                        setIdCountryNew(e.target.value);\n                      }}\n                    >\n                      {countries.map((x) => {\n                        return (\n                          <option value={x.id_country} key={x.id_country}>\n                            {decode_utf8(x.country)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </Form>\n              )}\n            </Modal.Body>\n            <Modal.Footer>\n              {formValidated ? (\n                <div class=\"alert alert-danger p-1\" role=\"alert\">\n                  Necesitas completar todos los campos\n                </div>\n              ) : null}\n              <Button variant=\"secondary\" onClick={handleCloseNew}>\n                Cancelar\n              </Button>\n              <Button variant=\"success\" onClick={() => sendNewForm()}>\n                Guardar cambios\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Modal\n            show={showEdit}\n            size=\"lg\"\n            onHide={handleCloseEdit}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>{titleEdit}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              {loadingEdit ? (\n                <Loading></Loading>\n              ) : (\n                <Form>\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Nombre del producto</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"text\"\n                      defaultValue={nameEdit}\n                      onChange={(e) => {\n                        setNameEdit(e.target.value);\n                      }}\n                    />\n                    {nameEditValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir un nombre\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  <Form.Group controlId=\"validationCustomUsername\">\n                    <Form.Label>Precio</Form.Label>\n                    <InputGroup hasValidation>\n                      <InputGroup.Prepend>\n                        <InputGroup.Text id=\"inputGroupPrepend\">\n                          $\n                        </InputGroup.Text>\n                      </InputGroup.Prepend>\n                      <Form.Control\n                        required\n                        type=\"number\"\n                        defaultValue={priceEdit}\n                        onChange={(e) => {\n                          setPriceEdit(e.target.value);\n                        }}\n                      />\n                    </InputGroup>\n                    {priceEditValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir el precio mayor a 0\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Stock</Form.Label>\n                    <Form.Control\n                      required\n                      type=\"number\"\n                      defaultValue={quantityEdit}\n                      onChange={(e) => {\n                        setQuantityEdit(e.target.value);\n                      }}\n                    />\n                    {quantityEditValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir stock mayor a 0\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  {idProductTypeEdit == 1 ? (\n                    <>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Cuerpo</Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          onChange={(e) => {\n                            setProductCuerpoEdit(e.target.value);\n                          }}\n                        >\n                          {productTypes.map((x) => {\n                            if (\n                              Object.keys(x)[0] === \"id_product_f_cuerpo_types\"\n                            ) {\n                              if (\n                                x.id_product_f_cuerpo_types ===\n                                productCuerpoEdit\n                              ) {\n                                return (\n                                  <option\n                                    value={x.id_product_f_cuerpo_types}\n                                    key={x.id_product_f_cuerpo_types}\n                                    selected\n                                  >\n                                    {decode_utf8(x.value)}\n                                  </option>\n                                );\n                              } else {\n                                return (\n                                  <option\n                                    value={x.id_product_f_cuerpo_types}\n                                    key={x.id_product_f_cuerpo_types}\n                                  >\n                                    {decode_utf8(x.value)}\n                                  </option>\n                                );\n                              }\n                            }\n                          })}\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Sabor</Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          onChange={(e) => {\n                            setProductSaborEdit(e.target.value);\n                          }}\n                        >\n                          {productTypes.map((x) => {\n                            if (\n                              Object.keys(x)[0] === \"id_product_f_sabor_types\"\n                            ) {\n                              if (\n                                x.id_product_f_sabor_types === productSaborEdit\n                              ) {\n                                return (\n                                  <option\n                                    value={x.id_product_f_sabor_types}\n                                    key={x.id_product_f_sabor_types}\n                                    selected\n                                  >\n                                    {decode_utf8(x.value)}\n                                  </option>\n                                );\n                              } else {\n                                return (\n                                  <option\n                                    value={x.id_product_f_sabor_types}\n                                    key={x.id_product_f_sabor_types}\n                                  >\n                                    {decode_utf8(x.value)}\n                                  </option>\n                                );\n                              }\n                            }\n                          })}\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                        <Form.Label>Acidez</Form.Label>\n                        <Form.Control\n                          required\n                          as=\"select\"\n                          onChange={(e) => {\n                            setProductAcidezEdit(e.target.value);\n                          }}\n                        >\n                          {productTypes.map((x) => {\n                            if (\n                              Object.keys(x)[0] === \"id_product_f_acidez_types\"\n                            ) {\n                              if (\n                                x.id_product_f_acidez_types ===\n                                productAcidezEdit\n                              ) {\n                                return (\n                                  <option\n                                    value={x.id_product_f_acidez_types}\n                                    key={x.id_product_f_acidez_types}\n                                    selected\n                                  >\n                                    {acidezTypes(x.value)}\n                                  </option>\n                                );\n                              } else {\n                                return (\n                                  <option\n                                    value={x.id_product_f_acidez_types}\n                                    key={x.id_product_f_acidez_types}\n                                  >\n                                    {acidezTypes(x.value)}\n                                  </option>\n                                );\n                              }\n                            }\n                          })}\n                        </Form.Control>\n                      </Form.Group>\n                    </>\n                  ) : null}\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Descripción corta del producto</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"textarea\"\n                      rows={3}\n                      defaultValue={descriptionEdit}\n                      onChange={(e) => {\n                        setDescriptionEdit(e.target.value);\n                      }}\n                    />\n                    {descriptionEditValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir una descripcion\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Descripción larga del producto</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"textarea\"\n                      rows={3}\n                      defaultValue={descriptionLongEdit}\n                      onChange={(e) => {\n                        setLongDescriptionEdit(e.target.value);\n                      }}\n                    />\n                    {descriptionLongEditValidation ? (\n                      <div class=\"alert alert-danger p-1\" role=\"alert\">\n                        Necesitas incluir una descripcion mas amplia\n                      </div>\n                    ) : null}\n                  </Form.Group>\n                  <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                    <Form.Label>Pais</Form.Label>\n                    <Form.Control\n                      required\n                      as=\"select\"\n                      defaultValue={idCountryEdit}\n                      onChange={(e) => {\n                        setIdCountryEdit(e.target.value);\n                      }}\n                    >\n                      {countries.map((x) => {\n                        return (\n                          <option value={x.id_country} key={x.id_country}>\n                            {decode_utf8(x.country)}\n                          </option>\n                        );\n                      })}\n                    </Form.Control>\n                  </Form.Group>\n                </Form>\n              )}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseEdit}>\n                Cancelar\n              </Button>\n              <Button variant=\"success\" onClick={() => sendEditForm()}>\n                Guardar cambios\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Modal\n            show={showCancel}\n            size=\"lg\"\n            onHide={handleCloseCancel}\n            backdrop=\"static\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>¿Estas seguro?</Modal.Title>\n            </Modal.Header>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseCancel}>\n                Cancelar\n              </Button>\n              <Button variant=\"danger\" onClick={() => deleteProduct()}>\n                Eliminar\n              </Button>\n            </Modal.Footer>\n          </Modal>\n\n          <Modal\n            show={showImage}\n            onHide={handleCloseImage}\n            backdrop=\"static\"\n            size=\"lg\"\n            keyboard={false}\n          >\n            <Modal.Header closeButton>\n              <Modal.Title>{titleEdit}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"mx-auto\">\n              {loadingImage ? (\n                <Loading></Loading>\n              ) : (\n                <div className=\"card text-center\" style={{ width: \"18rem\" }}>\n                  <label htmlFor=\"upload-button\">\n                    {image.preview ? (\n                      <img\n                        src={image.preview}\n                        alt={titleEdit}\n                        width=\"300\"\n                        height=\"300\"\n                      />\n                    ) : (\n                      <>\n                        <img\n                          class=\"card-img-top\"\n                          src={productImage}\n                          alt={titleEdit}\n                        />\n                        <h5 className=\"btn btn-primary\">\n                          Seleccionar nueva imagen\n                        </h5>\n                        <p>Solo se permiten archivos jpg & png.</p>\n                      </>\n                    )}\n                  </label>\n                  <input\n                    type=\"file\"\n                    id=\"upload-button\"\n                    style={{ display: \"none\" }}\n                    onChange={handleChangeImage}\n                  />\n                  <br />\n                  {errorImage ? (\n                    <div class=\"alert alert-danger\" role=\"alert\">\n                      {errorImageText}\n                    </div>\n                  ) : null}\n                  <button\n                    className=\"btn btn-success\"\n                    onClick={handleUploadImage}\n                  >\n                    Guardar cambios\n                  </button>\n                </div>\n              )}\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleCloseImage}>\n                Cancelar\n              </Button>\n            </Modal.Footer>\n          </Modal>\n          {noProducts ? (\n            <div className=\"container loadingFull\">\n              <div className=\"row text-center\">\n                <div className=\"col-sm-12\">\n                  <h3>Aun no tienes productos</h3>\n                </div>\n                <div className=\"col-sm-12\">\n                  <p>\n                    <button\n                      className=\"btn btn-outline-success\"\n                      onClick={() => handleShowNew()}\n                    >\n                      + Añadir producto\n                    </button>\n                  </p>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"col-sm-12\">\n                    <button\n                      className=\"btn btn-outline-success float-right\"\n                      onClick={() => handleShowNew()}\n                    >\n                      + Nuevo producto\n                    </button>\n                  </div>\n                  <div className=\"col-sm-12\">\n                    <table className=\"table\">\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">id</th>\n                          <th scope=\"col\">Titulo</th>\n                          <th scope=\"col\">Precio</th>\n                          <th\n                            scope=\"col\"\n                            className=\"text-center bg-dark text-white\"\n                          >\n                            Stock\n                          </th>\n                          <th scope=\"col\">Lugar</th>\n                          <th scope=\"col\">Editar</th>\n                          <th scope=\"col\">Imagen</th>\n                          <th scope=\"col\">Eliminar</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        {products.map((item, index) => {\n                          return (\n                            <tr key={index}>\n                              <th scope=\"row\">\n                                {item.active === 2 ? (\n                                  <FontAwesomeIcon\n                                    icon={faExclamationTriangle}\n                                    className=\"text-warning\"\n                                  />\n                                ) : (\n                                  item.id_products\n                                )}\n                              </th>\n                              <td>\n                                {item.active === 2\n                                  ? decode_utf8(item.name) +\n                                    \" (Producto sin imagen)\"\n                                  : decode_utf8(item.name)}\n                              </td>\n                              <td>$ {item.price}</td>\n                              <td className=\"text-center bg-dark text-white\">\n                                {item.quantity === 0 ? (\n                                  <span className=\"btn btn-warning btn-sm\">\n                                    Agotado\n                                  </span>\n                                ) : (\n                                  item.quantity\n                                )}\n                              </td>\n                              <td>{decode_utf8(item.country)}</td>\n                              <td>\n                                <button\n                                  className=\"btn btn-primary\"\n                                  onClick={() => handleShowEdit(item)}\n                                >\n                                  <FontAwesomeIcon icon={faPencilAlt} />\n                                </button>\n                              </td>\n                              <td>\n                                <button\n                                  className=\"btn btn-success\"\n                                  onClick={() => handleShowEditImage(item)}\n                                >\n                                  <FontAwesomeIcon icon={faImage} />\n                                </button>\n                              </td>\n                              <td>\n                                <button\n                                  className=\"btn btn-danger\"\n                                  onClick={() => handleShowCancel(item)}\n                                >\n                                  <FontAwesomeIcon icon={faTrashAlt} />\n                                </button>\n                              </td>\n                            </tr>\n                          );\n                        })}\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Products;\n","import React from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\n\nconst Start = () => {\n  const history = useHistory();\n\n  const productsPage = () => {\n    history.push(\"/bienvenido/productos\");\n  };\n\n  const packsPage = () => {\n    history.push(\"/bienvenido/paquetes\");\n  };\n\n  return (\n    <div className=\"container loadingFull\">\n      <div className=\"row text-center\">\n        <div className=\"col-sm-12\">\n          <h3>Bienvenido al portal de provedores</h3>\n        </div>\n        <div className=\"col-sm-12\">\n          Aqui podras administrar tus productos y crear paquetes para vender de\n          manera optima tus productos en BolsaDeCafe.\n        </div>\n        <div className=\"col-sm-12\">\n          <p>\n            <small>Usa las pestañas de arriba para navegar.</small>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Start;\n","import React, {useState, useEffect} from 'react';\nimport Loading from '../../utilities/Loading';\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faImage, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { Modal, Button, Form, InputGroup, Row, Col } from 'react-bootstrap';\nimport { getUserPacks, getCountUserProducts, getUserProducts, newPack, newPackProductsIds, getProductImage, deactivateProduct, getPacksUserProductsIds, updatePack, updatePackProductsIds } from '../../api/functionApis';\n\nconst Packs = () => {\n    const [loading, setLoading] = useState(true);\n    const [noPacks, setNoPacks] = useState(true);\n    const [packs, setPacks] = useState([]);\n    const [productsCount, setProductsCount] = useState(false);\n    const [products, setProducts] = useState([]);\n    const [productsToAdd, setProductsToAdd] = useState([]);\n    const [titleModal, setTitleModal] = useState([]);\n\n    //NewPack\n    const [showNew, setShowNew] = useState(false);\n    const [loadingNew, setLoadingNew] = useState(false);\n    const [nameNew, setNameNew] = useState('');\n    const [priceNew, setPriceNew] = useState('');\n    const [descriptionNew, setDescriptionNew] = useState('');\n    const [longDescriptionNew, setLongDescriptionNew] = useState('');\n    const [productPack, setProductPack] = useState({});\n    const [quantityNew, setQuantityNew] = useState(0);\n    const [newPackItem, setNewPackItem] = useState([]);\n\n    const [formValidated, setFormValidated] = useState(false);\n    const [nameNewValidation, setNameNewValidation] = useState(false);\n    const [priceNewValidation, setPriceNewValidation] = useState(false);\n    const [descriptionNewValidation, setDescriptionNewValidation] = useState(false);\n    const [descriptionLongNewValidation, setDescriptionLongNewValidation] = useState(false);\n    const [quantityNewValidation, setQuantityNewValidation] = useState(false);\n    const [stockEmpty, setStockEmpty] = useState(false);\n\n    //ImgHandling\n    const [showAlertImgNew, setShowAlertImgNew] = useState(false);\n    const [image, setImage] = useState({ preview: \"\", raw: \"\" });\n    const [showImage, setShowImage] = useState(false);\n    const [loadingImage, setLoadingImage] = useState(false);\n    const [idProductImage, setIdProductImage] = useState(0);\n    const [productImage, setProductImage] = useState('');\n    const [errorImageText, setErrorImageText] = useState('Error');\n    const [errorImage, setErrorImage] = useState(false);\n\n    //DeactivateModal\n    const [showCancel, setShowCancel] = useState(false);\n    const [idProductDelete, setIdProductDelete] = useState(0);\n\n    //EditPack\n    const [showEdit, setShowEdit] = useState(false);\n    const [loadingEdit, setLoadingEdit] = useState(false);\n    const [nameEdit, setNameEdit] = useState('');\n    const [priceEdit, setPriceEdit] = useState('');\n    const [descriptionEdit, setDescriptionEdit] = useState('');\n    const [longDescriptionEdit, setLongDescriptionEdit] = useState('');\n    const [productPackEdit, setProductPackEdit] = useState({});\n    const [quantityEdit, setQuantityEdit] = useState(0);\n    const [idPack, setIdPack] = useState(0);\n\n    const [formValidatedEdit, setFormValidatedEdit] = useState(false);\n    const [nameEditValidation, setNameEditValidation] = useState(false);\n    const [priceEditValidation, setPriceEditValidation] = useState(false);\n    const [descriptionEditValidation, setDescriptionEditValidation] = useState(false);\n    const [descriptionLongEditValidation, setDescriptionLongEditValidation] = useState(false);\n    const [quantityEditValidation, setQuantityEditValidation] = useState(false);\n    const [stockEmptyEdit, setStockEmptyEdit] = useState(false);\n\n    const getUser = () =>{\n        const loggedInUser = localStorage.getItem(\"08191993\");\n        return loggedInUser;\n    };\n\n    const handleCloseImgNew = () => setShowAlertImgNew(false);\n\n    const handleShowEditImage = (item) =>{\n        setTitleModal('#'+item.id_products+' '+'-'+' '+decode_utf8(item.name));\n        setImage({ preview: \"\", raw: \"\" });\n        setShowImage(true);\n        setLoadingImage(true);\n        setIdProductImage(item.id_products);\n        getProductImage(item.id_products).then((x) => setProductImage(x)).finally(() => setLoadingImage(false));\n    }\n\n    const handleChangeImage = e => {\n        if (e.target.files.length) {\n          setImage({\n            preview: URL.createObjectURL(e.target.files[0]),\n            raw: e.target.files[0]\n          });\n        }\n    };\n\n    const handleUploadImage = async e => {\n        e.preventDefault();\n        setLoadingImage(true);\n        const formData = new FormData();\n        formData.append(\"avatar\", image.raw);\n        formData.append(\"id_products\", idProductImage);\n        \n        axios.post( 'https://bolsadecafe.com/dashboard/user/uploadImage.php',\n          formData,\n          {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n          }\n        ).then(function(res){\n          //console.log('SUCCESS!!', res.data);\n          if(res.data.status == 1){\n            //setLoadingImage(false);\n            getUserPacks(getUser()).then((x) => {\n                if(x !== 'No results'){\n                    setNoPacks(false);\n                    setPacks(x);\n                }else{\n                    setNoPacks(true);\n                }\n            }).finally(() => {\n                setLoadingImage(false);\n                setShowImage(false);\n            });\n          }else if(res.data.status == 2){\n            setLoadingImage(false);\n            setErrorImage(true);\n            setErrorImageText('Servicio actualmente no disponible');\n          }else if(res.data.status == 3){\n            setLoadingImage(false);\n            setErrorImage(true);\n            setErrorImageText('El tipo de archivo no es permitido');\n          }\n        })\n        .catch(function(){\n          console.log('FAILURE!!');\n        });\n    };\n\n    const handleShowCancel = (item) => {\n        setShowCancel(true);\n        setIdProductDelete(item.id_products);\n    };\n\n    const deleteProduct = () => {\n        setShowCancel(false);\n        setLoading(true);\n        deactivateProduct(idProductDelete).then(() => {\n            getUserPacks(getUser()).then((x) => {\n                if(x !== 'No results'){\n                    setNoPacks(false);\n                    setPacks(x);\n                }else{\n                    setNoPacks(true);\n                }\n            }).finally(() => setLoading(false));\n        });\n    };\n\n    const handleShowEdit = (item) => {\n        setLoadingEdit(true);\n        setShowEdit(true);\n        getUserProducts(getUser()).then((y) =>{\n            setProducts(y);\n        }).then(() => {\n            getPacksUserProductsIds(item.id_products).then((x) =>{\n                let prdAdd = [];\n                for(let key in x){\n                    prdAdd.push({\n                        id_products: x[key].id_products,\n                        name: x[key].name,\n                        quantity: x[key].quantity,\n                        stock: x[key].stock,\n                    });\n                    \n                    setProducts((products) => {\n                        let prd = [];\n                        for(let keyy in products){\n                            if(products[keyy].id_products != x[key].id_products){\n                                prd.push(products[keyy]);\n                            }\n                        }\n                        return [...prd];\n                    });\n\n                }\n                setProductsToAdd(prdAdd);\n                setTitleModal('#'+item.id_products+' '+'-'+' '+decode_utf8(item.name));\n                setNameEdit(item.name);\n                setPriceEdit(item.price);\n                setQuantityEdit(item.quantity);\n                setDescriptionEdit(item.description);\n                setLongDescriptionEdit(item.long_description);\n                setIdPack(item.id_products);\n            });\n        }).finally(() => {\n            \n            setLoadingEdit(false);\n        });\n        \n        \n    };\n\n    const handleCloseEdit = () => setShowEdit(false);\n\n    const handleCloseCancel = () => setShowCancel(false);\n\n    const handleCloseImage = () => setShowImage(false);\n\n    const handleCloseNew = () => setShowNew(false);\n\n    const handleShowNew = () =>{\n        setNameNew('');\n        setPriceNew('');\n        setDescriptionNew('');\n        setLongDescriptionNew('');\n        setProducts([]);\n        setProductsToAdd([]);\n        setQuantityNew(0);\n        setShowNew(true);\n        setLoadingNew(true);\n        getUserProducts(getUser()).then((x) =>{\n            setProducts(x);\n        }).finally(() => setLoadingNew(false));\n\n    };\n\n    const validateEditForm = () =>{\n        if(nameEdit === ''){\n            setNameEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setNameEditValidation(false);\n        }\n        if(priceEdit === '' && priceEdit <= 0){\n            setPriceEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setPriceEditValidation(false);\n        }\n        if(quantityEdit === '' && quantityEdit <= 0){\n            setQuantityEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setQuantityEditValidation(false);\n        }\n        if(descriptionEdit === ''){\n            setDescriptionEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setDescriptionEditValidation(false);\n        }\n        if(longDescriptionEdit === ''){\n            setDescriptionLongEditValidation(true);\n            setFormValidatedEdit(true);\n            return false;\n        }else{\n            setDescriptionLongEditValidation(false);\n        }\n        if(!(productsToAdd.length >= 2)){\n            setFormValidatedEdit(true);\n            return false;\n        }\n        for(let key in productsToAdd){\n            if(productsToAdd[key].validated === true || productsToAdd[key].stock == 0){\n                setStockEmptyEdit(true);\n                setFormValidatedEdit(true);\n                return false;\n            }\n        }\n        setStockEmptyEdit(false);\n        setFormValidatedEdit(false);\n        return true;\n    };\n\n    const promisesProductsPackEdit = (idCampaign) =>{\n        let promises = [];\n        for(let key in productsToAdd){\n            promises.push(updatePackProductsIds(productsToAdd[key].id_products, idCampaign, productsToAdd[key].stock));\n        }\n        return promises;\n    };\n\n    const sendEditForm = () =>{\n        if(validateEditForm()){\n            setShowEdit(false);\n            setLoading(true);\n            updatePack(getUser(), idPack, nameEdit, descriptionEdit, longDescriptionEdit, quantityEdit, priceEdit).then((x) =>{\n                setNewPackItem(x[0]);\n                Promise.all(promisesProductsPack(idPack)).then(function (results) {\n                    getUserPacks(getUser()).then((x) => {\n                        if(x !== 'No results'){\n                            setNoPacks(false);\n                            setPacks(x);\n                        }else{\n                            setNoPacks(true);\n                        }\n                    }).finally(() => {\n                        setLoading(false);\n                    });\n                });\n            })\n        }\n    };\n\n    const validateNewForm = () =>{\n        if(nameNew === ''){\n            setNameNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setNameNewValidation(false);\n        }\n        if(priceNew === '' && priceNew <= 0){\n            setPriceNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setPriceNewValidation(false);\n        }\n        if(quantityNew === '' && quantityNew <= 0){\n            setQuantityNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setQuantityNewValidation(false);\n        }\n        if(descriptionNew === ''){\n            setDescriptionNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setDescriptionNewValidation(false);\n        }\n        if(longDescriptionNew === ''){\n            setDescriptionLongNewValidation(true);\n            setFormValidated(true);\n            return false;\n        }else{\n            setDescriptionLongNewValidation(false);\n        }\n        if(!(productsToAdd.length >= 2)){\n            setFormValidated(true);\n            return false;\n        }\n        for(let key in productsToAdd){\n            if(productsToAdd[key].validated === true || productsToAdd[key].stock == 0){\n                setStockEmpty(true);\n                setFormValidated(true);\n                return false;\n            }\n        }\n        setStockEmpty(false);\n        setFormValidated(false);\n        return true;\n    };\n\n    const promisesProductsPack = (idCampaign) =>{\n        let promises = [];\n        for(let key in productsToAdd){\n            promises.push(newPackProductsIds(productsToAdd[key].id_products, idCampaign, productsToAdd[key].stock));\n        }\n        return promises;\n    };\n\n    const sendNewForm = () =>{\n        if(validateNewForm()){\n            setShowNew(false);\n            setLoading(true);\n            newPack(getUser(), nameNew, descriptionNew, longDescriptionNew, quantityNew, priceNew).then((x) =>{\n                setNewPackItem(x[0]);\n                Promise.all(promisesProductsPack(x[0].id_products)).then(function (results) {\n                    for(let key in results){\n                        if(results[key] != 1){\n                            console.log(\"Error\");\n                        }\n                    }\n                    getUserPacks(getUser()).then((x) => {\n                        if(x !== 'No results'){\n                            setNoPacks(false);\n                            setPacks(x);\n                        }else{\n                            setNoPacks(true);\n                        }\n                    }).finally(() => {\n                        setLoading(false);\n                        setShowAlertImgNew(true);\n                    });\n                });\n            });\n        }\n    }\n\n    const validateQuantity = (value, idProduct, quantity) =>{\n        //setProducts([...products, prd]);\n        setProductsToAdd((productsToAdd) => {\n            let prd = productsToAdd;\n            for(let key in prd){\n                if(prd[key].id_products == idProduct){\n                    if(value > Number(prd[key].quantity)){\n                        prd[key].validated = true;\n                        prd[key].stock = 0;\n                    }else{\n                        prd[key].validated = false;\n                        prd[key].stock = value;\n                    }\n                }\n            }\n            return [...prd];\n        });\n        //console.log(productsToAdd);\n    };\n\n    const addProducts = (item) =>{\n        \n        let idProducts = item.split(\"|\")[0];\n        let name = (item.split(\"|\")[1]).split(\"/\")[0];\n        let quantity = (item.split(\"|\")[1]).split(\"/\")[1];\n        //console.log(\"id\", idProducts, \"name\", name, \"qty\", quantity);\n        setProductsToAdd([...productsToAdd, {\n            id_products: idProducts,\n            name: name,\n            quantity: quantity,\n            stock: 0,\n        }]);\n        setProducts((products) => {\n            let prd = [];\n            for(let key in products){\n                if(products[key].id_products != idProducts){\n                    prd.push(products[key]);\n                }\n            }\n            return [...prd];\n        });\n\n    };\n\n\n    useEffect(() => {\n        getUserPacks(getUser()).then((x) => {\n            if(x !== 'No results'){\n                setNoPacks(false);\n                setPacks(x);\n            }else{\n                setNoPacks(true);\n            }\n            getCountUserProducts(getUser()).then((y) =>{\n                if(y[0].count !== 0){\n                    setProductsCount(false);\n                }else{\n                    setProductsCount(true);\n                }\n            })\n        }).finally(() => setLoading(false));\n    }, []);\n\n    function decode_utf8(s) {\n        return decodeURIComponent(escape(s));\n    }\n\n    return (\n        <div>\n            <div className=\"mt-3\">\n                {loading ? (<Loading></Loading>) : \n                (\n                    <>\n                    <Modal\n                        show={showEdit}\n                        size=\"lg\"\n                        onHide={handleCloseEdit}\n                        backdrop=\"static\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title>{titleModal}</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            {loadingEdit ? (<Loading></Loading>) : \n                            (<Form>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Nombre del paquete</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Paquete de primavera, Paquete especial\" value={nameEdit} onChange={e => {setNameEdit(e.target.value)}} />\n                                    {nameEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir un nombre</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"validationCustomUsername\">\n                                    <Form.Label>Precio</Form.Label>\n                                    <InputGroup hasValidation>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <Form.Control\n                                            placeholder=\"100\"\n                                            value={priceEdit}\n                                            type=\"number\"\n                                            onChange={e => {setPriceEdit(e.target.value)}}\n                                        />\n                                    </InputGroup>\n                                    {priceEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir el precio mayor a 0</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Stock del paquete</Form.Label>\n                                    <Form.Control required type=\"number\" placeholder=\"10\" value={quantityEdit} onChange={e => {setQuantityEdit(e.target.value)}} />\n                                    {quantityEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir stock mayor a 0</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Descripción corta del paquete</Form.Label>\n                                    <Form.Control as=\"textarea\" placeholder=\"Descripcion corta donde se describa en menos de 30 caracteres tu paquete\" value={descriptionEdit} rows={3} onChange={e => {setDescriptionEdit(e.target.value)}} />\n                                    {descriptionEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Descripción larga del producto</Form.Label>\n                                    <Form.Control as=\"textarea\" rows={3} placeholder=\"Descripcion completa del paquete\" value={longDescriptionEdit} onChange={e => {setLongDescriptionEdit(e.target.value)}} />\n                                    {descriptionLongEditValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion mas amplia</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Incluir productos</Form.Label>\n                                    <div className=\"container\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-4\">\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                                    <Form.Control required as=\"select\" onChange={e => {\n                                                        //console.log(e.target.value);\n                                                        setProductPackEdit(e.target.value);\n                                                    }}>\n                                                        <option value={0}>Selecciona un producto...</option>\n                                                        {products.map((x) => {\n                                                            return (<option value={x.id_products+'|'+decode_utf8(x.name)+'/'+x.quantity} key={x.id_products}>{decode_utf8(x.name)}</option>);\n                                                        })}\n                                                    </Form.Control>\n                                                    \n                                                </Form.Group>\n                                                <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => addProducts(productPackEdit)}>Añadir</button>\n                                            </div>\n                                            <div className=\"col-sm-2\"></div>\n                                            <div className=\"col-sm-6\">\n                                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                    <Col sm=\"7\">\n                                                        <b>Producto</b>\n                                                    </Col>\n                                                    <Col sm=\"5\">\n                                                        <b>Cantidad</b>\n                                                    </Col>\n                                                </Form.Group>\n                                                {productsToAdd.map((x, index) => {\n                                                    //console.log(x);\n                                                    return (<div key={index}><Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                        <Col sm=\"7\">\n                                                            {decode_utf8(x.name)}\n                                                        </Col>\n                                                        <Col sm=\"5\">\n                                                            <Form.Control type=\"number\" placeholder={x.quantity} max={x.quantity} value={x.stock} onChange={e => {validateQuantity(e.target.value, x.id_products, x.quantity)}} />\n                                                            {x.validated ? (<div class=\"alert alert-warning\" role=\"alert\">La cantidad no puede ser mayor al stock</div>) : null}\n                                                        </Col>\n                                                    </Form.Group></div>);\n                                                })}\n                                                {stockEmptyEdit ? (<div class=\"alert alert-warning\" role=\"alert\">Te faltan campos</div>) : null}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Form.Group>\n                               \n                            </Form>)}\n                        </Modal.Body>\n                        <Modal.Footer>\n                            {formValidatedEdit ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas completar todos los campos</div>) : null }\n                            {productsToAdd.length >= 2 ? null : (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas agregar mas de dos productos</div>) }\n                            <Button variant=\"secondary\" onClick={handleCloseEdit}>\n                                Cancelar\n                            </Button>\n                            <Button variant=\"success\" onClick={() => sendEditForm()}>Guardar cambios</Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <Modal\n                        show={showCancel}\n                        size=\"lg\"\n                        onHide={handleCloseCancel}\n                        backdrop=\"static\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title>¿Estas seguro?</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleCloseCancel}>\n                                Cancelar\n                            </Button>\n                        <Button variant=\"danger\" onClick={() => deleteProduct()}>Eliminar</Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <Modal\n                        show={showImage}\n                        onHide={handleCloseImage}\n                        backdrop=\"static\"\n                        size=\"lg\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                            <Modal.Title>{titleModal}</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body className=\"mx-auto\">\n                            {loadingImage ? (<Loading></Loading>) \n                            : (<div className=\"card text-center\" style={{width: \"18rem\"}}>\n                                <label htmlFor=\"upload-button\">\n                                {image.preview ? (\n                                    <img src={image.preview} alt={titleModal} width=\"300\" height=\"300\" />\n                                ) : (\n                                    <>\n                                    <img class=\"card-img-top\" src={productImage} alt={titleModal} />\n                                    <h5 className=\"btn btn-primary\">Seleccionar nueva imagen</h5>\n                                    <p>Solo se permiten archivos jpg & png.</p>\n                                    </>\n                                )}\n                                </label>\n                                <input\n                                type=\"file\"\n                                id=\"upload-button\"\n                                style={{ display: \"none\" }}\n                                onChange={handleChangeImage}\n                                />\n                                <br />\n                                {errorImage ? (<div class=\"alert alert-danger\" role=\"alert\">{errorImageText}</div>) : null}\n                                <button className=\"btn btn-success\" onClick={handleUploadImage}>Guardar cambios</button>\n                            </div>)}\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleCloseImage}>\n                                Cancelar\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <Modal \n                        show={showAlertImgNew} \n                        onHide={handleCloseImgNew} \n                        backdrop=\"static\" \n                        keyboard={false}>\n                        <Modal.Header closeButton>\n                        <Modal.Title>Para que el paquete sea visible en BolsaDeCafe, necesitas incluir una imagen del conjunto.</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Footer>\n                            <Button variant=\"secondary\" onClick={handleCloseImgNew}>\n                                Despues\n                            </Button>\n                            <Button variant=\"primary\" onClick={() => {\n                                setShowAlertImgNew(false);\n                                handleShowEditImage(newPackItem);\n                            }}>\n                                    Subir imagen\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <Modal\n                        show={showNew}\n                        size=\"lg\"\n                        onHide={handleCloseNew}\n                        backdrop=\"static\"\n                        keyboard={false}\n                    >\n                        <Modal.Header closeButton>\n                                    <Modal.Title>Nuevo paquete</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            {loadingNew ? (<Loading></Loading>) : \n                            (<Form>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Nombre del paquete</Form.Label>\n                                    <Form.Control type=\"text\" placeholder=\"Paquete de primavera, Paquete especial\" onChange={e => {setNameNew(e.target.value)}} />\n                                    {nameNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir un nombre</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"validationCustomUsername\">\n                                    <Form.Label>Precio</Form.Label>\n                                    <InputGroup hasValidation>\n                                        <InputGroup.Prepend>\n                                            <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n                                        </InputGroup.Prepend>\n                                        <Form.Control\n                                            placeholder=\"100\"\n                                            type=\"number\"\n                                            onChange={e => {setPriceNew(e.target.value)}}\n                                        />\n                                    </InputGroup>\n                                    {priceNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir el precio mayor a 0</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Stock del paquete</Form.Label>\n                                    <Form.Control required type=\"number\" placeholder=\"10\" onChange={e => {setQuantityNew(e.target.value)}} />\n                                    {quantityNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir stock mayor a 0</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Descripción corta del paquete</Form.Label>\n                                    <Form.Control as=\"textarea\" placeholder=\"Descripcion corta donde se describa en menos de 30 caracteres tu paquete\" rows={3} onChange={e => {setDescriptionNew(e.target.value)}} />\n                                    {descriptionNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Descripción larga del producto</Form.Label>\n                                    <Form.Control as=\"textarea\" rows={3} placeholder=\"Descripcion completa del paquete\" onChange={e => {setLongDescriptionNew(e.target.value)}} />\n                                    {descriptionLongNewValidation ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas incluir una descripcion mas amplia</div>) : null}\n                                </Form.Group>\n                                <Form.Group controlId=\"exampleForm.ControlInput1\">\n                                    <Form.Label>Incluir productos</Form.Label>\n                                    <div className=\"container\">\n                                        <div className=\"row\">\n                                            <div className=\"col-sm-4\">\n                                                <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                                    <Form.Control required as=\"select\" onChange={e => {\n                                                        //console.log(e.target.value);\n                                                        setProductPack(e.target.value);\n                                                    }}>\n                                                        <option value={0}>Selecciona un producto...</option>\n                                                        {products.map((x) => {\n                                                            return (<option value={x.id_products+'|'+decode_utf8(x.name)+'/'+x.quantity} key={x.id_products}>{decode_utf8(x.name)}</option>);\n                                                        })}\n                                                    </Form.Control>\n                                                    \n                                                </Form.Group>\n                                                <button type=\"button\" className=\"btn btn-primary btn-sm\" onClick={() => addProducts(productPack)}>Añadir</button>\n                                            </div>\n                                            <div className=\"col-sm-2\"></div>\n                                            <div className=\"col-sm-6\">\n                                                <Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                    <Col sm=\"7\">\n                                                        <b>Producto</b>\n                                                    </Col>\n                                                    <Col sm=\"5\">\n                                                        <b>Cantidad</b>\n                                                    </Col>\n                                                </Form.Group>\n                                                {productsToAdd.map((x, index) => {\n                                                    //console.log(x);\n                                                    return (<div key={index}><Form.Group as={Row} controlId=\"formPlaintextEmail\">\n                                                        <Col sm=\"7\">\n                                                            {x.name}\n                                                        </Col>\n                                                        <Col sm=\"5\">\n                                                            <Form.Control type=\"number\" placeholder={x.quantity} max={x.quantity} onChange={e => {validateQuantity(e.target.value, x.id_products, x.quantity)}} />\n                                                            {x.validated ? (<div class=\"alert alert-warning\" role=\"alert\">La cantidad no puede ser mayor al stock</div>) : null}\n                                                        </Col>\n                                                    </Form.Group></div>);\n                                                })}\n                                                {stockEmpty ? (<div class=\"alert alert-warning\" role=\"alert\">Te faltan campos</div>) : null}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </Form.Group>\n                               \n                            </Form>)}\n                        </Modal.Body>\n                        <Modal.Footer>\n                            {formValidated ? (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas completar todos los campos</div>) : null }\n                            {productsToAdd.length >= 2 ? null : (<div class=\"alert alert-danger p-1\" role=\"alert\">Necesitas agregar mas de dos productos</div>) }\n                            <Button variant=\"secondary\" onClick={handleCloseNew}>\n                                Cancelar\n                            </Button>\n                            <Button variant=\"success\" onClick={() => sendNewForm()}>Guardar cambios</Button>\n                        </Modal.Footer>\n                    </Modal>\n                    {noPacks ? (<div className=\"container loadingFull\">\n                        <div className=\"row text-center\">\n                            <div className=\"col-sm-12\"><h3>En esta seccion podras crear paquetes de tus propios productos e incrementar tus ventas</h3></div>\n                            <div className=\"col-sm-12\">\n                                <p>\n                                    {productsCount ? (<span className=\"btn btn-warning\">No puedes añadir paquetes sin productos activos</span>) : \n                                    (<button className=\"btn btn-outline-success\" onClick={() => handleShowNew()}>+ Añadir paquete</button>)}\n                                </p>\n                            </div>\n                        </div>\n                    </div>) : \n                    (<div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-12\"><button className=\"btn btn-outline-success float-right\" onClick={() => handleShowNew()}>+ Nuevo paquete</button></div>\n                            <div className=\"col-sm-12\">\n                                <table className=\"table\">\n                                    <thead>\n                                        <tr>\n                                            <th scope=\"col\">id</th>\n                                            <th scope=\"col\">Titulo</th>\n                                            <th scope=\"col\">Precio</th>\n                                            <th scope=\"col\" className=\"text-center bg-dark text-white\">Stock</th>\n                                            <th scope=\"col\">Editar</th>\n                                            <th scope=\"col\">Imagen</th>\n                                            <th scope=\"col\">Eliminar</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                    { packs.map((item, index) => {\n                                        return(\n                                            <tr key={index} >\n                                                <th scope=\"row\">{item.active === 2 ? (<FontAwesomeIcon icon={faExclamationTriangle} className=\"text-warning\" />) : item.id_products}</th>\n                                                <td>{item.active === 2 ? decode_utf8(item.name)+' (Producto sin imagen)' : decode_utf8(item.name)}</td>\n                                                <td>$ {item.price}</td>\n                                                <td className=\"text-center bg-dark text-white\">{item.quantity === 0 ? (<span className=\"btn btn-warning btn-sm\">Agotado</span>) : item.quantity}</td>\n                                                <td>\n                                                    <button className=\"btn btn-primary\" onClick={() => handleShowEdit(item)}>\n                                                        <FontAwesomeIcon icon={faPencilAlt} />\n                                                    </button>\n                                                </td>\n                                                <td>\n                                                    <button className=\"btn btn-success\" onClick={() => handleShowEditImage(item)}>\n                                                        <FontAwesomeIcon icon={faImage} />\n                                                    </button>\n                                                </td>\n                                                <td>\n                                                    <button className=\"btn btn-danger\" onClick={() => handleShowCancel(item)}>\n                                                        <FontAwesomeIcon icon={faTrashAlt} />\n                                                    </button>\n                                                </td>\n                                            </tr>\n                                        );\n                                        })\n                                    }      \n                                        \n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </div>)}\n                    </>\n                    \n                )}\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Packs\n","const decodeUtf8 = (s) => {\n  return decodeURIComponent(escape(s));\n}\n\nexport default decodeUtf8","const getUser = () => {\n  const loggedInUser = localStorage.getItem(\"08191993\");\n  console.log(loggedInUser);\n  return loggedInUser;\n};\nexport default getUser","import React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { getUserSales } from \"../../api/functionApis\";\nimport Loading from \"../../utilities/Loading\";\nimport decodeUtf8 from \"../../utils/functions/decodeUtf8\";\nimport getUser from \"../../utils/functions/getUser\";\nimport { FaBeer } from 'react-icons/fa';\nimport { TiWarning } from 'react-icons/ti';\nimport { BsPatchCheckFill } from 'react-icons/bs';\nimport { HiOutlineDownload } from 'react-icons/hi';\n\nconst Sales = () => {\n  const [loading, setLoading] = useState(false);\n  const [noSales, setNoSales] = useState(false);\n  const [sales, setSales] = useState([]);\n\n  useEffect(() => {\n    getUserSales(getUser()).then((x) => {\n      console.log(x);\n      if(x !== false){\n        setNoSales(true);\n        setSales(x);\n      }else{\n        setNoSales(false);\n      }\n\n      setLoading(true);\n    });\n  }, []);\n\n  const statusOfPackage = (status) => {\n    if(status === 1){\n      return <button className=\"btn btn-warning btn-sm\"><TiWarning /></button>\n    }else if(status === 2){\n      return <button className=\"btn btn-success btn-sm\"><BsPatchCheckFill /></button>\n    }\n  }\n\n  const label = (status, label) => {\n    if(status === 1){\n      return <a className=\"btn btn-warning btn-sm\" \n      target=\"_blank\" \n      href={label}>\n        <HiOutlineDownload />\n      </a>\n    }else if(status === 2){\n      return <button className=\"btn btn-success btn-sm\" >\n        <FaBeer />\n      </button>\n    }\n  }\n\n  return (\n    <div>\n      {loading ? (\n        <div className=\"mt-3\">\n          {noSales ? (\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-sm-12\">\n                  <table className=\"table\">\n                    <thead>\n                        <tr>\n                          <th scope=\"col\">Orden</th>\n                          <th scope=\"col\" className=\"table-secondary\">Producto</th>\n                          <th scope=\"col\" className=\"table-secondary\">Cantidad</th>\n                          <th scope=\"col\">Cliente</th>\n                          <th scope=\"col\">Estatus</th>\n                          <th\n                            scope=\"col\"\n                            className=\"text-center bg-dark text-white\"\n                          >\n                            Etiqueta\n                          </th>\n                        </tr>  \n                    </thead>\n                    <tbody>\n                      {\n                        sales.map((item, index) => {\n                          return (\n                          <tr key={index}>\n                            <td className=\"text-center\">\n                              {\n                                item.id_orders\n                              }\n                            </td>\n                            <td className=\"table-secondary\">\n                              {\n                                 <b>{decodeUtf8(item.name)}</b>\n                              }\n                            </td>\n                            <td className=\"table-secondary text-center\">\n                              {\n                                <b>{item.quantity}</b>\n                              }\n                            </td>\n                            <td className=\"text-center\">\n                              {\n                                item.first_name+' '+item.last_name\n                              }\n                            </td>\n                            <td className=\"text-center\">\n                              {\n                                statusOfPackage(item.complete)\n                              }\n                            </td>\n                            <td className=\"table-dark text-center\">\n                              {\n                                label(item.complete, item.shipment_label_url)\n                              }\n                            </td>\n                          </tr>);\n                        })\n                      }\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"container loadingFull\">\n              <div className=\"row text-center\">\n                <div className=\"col-sm-12\">\n                  <h3>Aun no tienes ventas</h3>\n                </div>\n                <div className=\"col-sm-12\">\n                  <p>Vendele mas duro</p>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default Sales;\n","import React, { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { newAddress } from \"../../api/functionApis\";\nimport getUser from \"../../utils/functions/getUser\";\n\nconst AddressForm = ({ updateAddress }) => {\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm();\n\n  const [loadingForm, setloadingForm] = useState(false);\n\n  const onSubmit = (data) => {\n    setloadingForm(true);\n    newAddress(\n      getUser(),\n      data.street,\n      data.no,\n      data.noInt,\n      data.city,\n      data.state,\n      data.cp,\n      data.colony,\n      data.description\n    ).then((x) => {\n      setloadingForm(false);\n      if (x === 1) {\n        updateAddress(true);\n      } else {\n        updateAddress(false);\n      }\n    });\n  };\n\n  return (\n    <div className=\"container loadingFull\">\n      <div className=\"row text-center\">\n        <div className=\"col-sm-12\">\n          <h3>¿Cual es tu domicilio?</h3>\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <form onSubmit={handleSubmit(onSubmit)}>\n                <div className=\"form-row mb-2\">\n                  <div className=\"col-6\">\n                    <input\n                      type=\"text\"\n                      className={\n                        errors.street\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"Calle\"\n                      {...register(\"street\", { required: true })}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <input\n                      type=\"text\"\n                      className={\n                        errors.no\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"No ext\"\n                      {...register(\"no\", { required: true })}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"No int\"\n                      {...register(\"noInt\")}\n                    />\n                  </div>\n                  <div className=\"col-3\">\n                    <input\n                      type=\"text\"\n                      className={\n                        errors.colony\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"Colonia\"\n                      {...register(\"colony\", { required: true })}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row mb-2\">\n                  <div className=\"col-7\">\n                    <input\n                      type=\"text\"\n                      className={\n                        errors.city\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"Ciudad\"\n                      {...register(\"city\", { required: true })}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <input\n                      type=\"text\"\n                      className={\n                        errors.state\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"Estado\"\n                      {...register(\"state\", { required: true })}\n                    />\n                  </div>\n                  <div className=\"col\">\n                    <input\n                      type=\"text\"\n                      className={\n                        errors.cp\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      placeholder=\"CP\"\n                      {...register(\"cp\", { required: true })}\n                    />\n                  </div>\n                </div>\n                <div className=\"form-row mb-2\">\n                  <div className=\"col-12\">\n                    <textarea\n                      className={\n                        errors.description\n                          ? \"form-control border border-danger\"\n                          : \"form-control\"\n                      }\n                      id=\"exampleFormControlTextarea1\"\n                      placeholder=\"Descripción adicional\"\n                      rows=\"3\"\n                      {...register(\"description\", { required: true })}\n                    ></textarea>\n                  </div>\n                </div>\n                <div className=\"form-row\">\n                  <div className=\"col-12\">\n                    {loadingForm ? (\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-warning\"\n                        disabled\n                      >\n                        Guardando\n                      </button>\n                    ) : (\n                      <button type=\"submit\" className=\"btn btn-success\">\n                        Guardar\n                      </button>\n                    )}\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AddressForm;\n","import React, { useEffect, useState } from \"react\";\nimport \"../../css/welcome.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPowerOff, faTools } from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  useHistory,\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\nimport Logo from \"../../resources/images/logo.png\";\nimport Products from \"./Products\";\nimport StartPage from \"./Start\";\nimport Packs from \"./Packs\";\nimport Loading from \"../../utilities/Loading\";\nimport { getAddressUser, getUserData } from \"../../api/functionApis\";\nimport Sales from \"./Sales\";\nimport AddressForm from \"../AddressForm/AddressForm\";\n\nconst Welcome = () => {\n  const history = useHistory();\n  const [user, setUser] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [hasAddress, setHasAddress] = useState(false);\n\n  const getUser = async () => {\n    setLoading(true);\n    const loggedInUser = localStorage.getItem(\"08191993\");\n    if (!loggedInUser) {\n      history.push(\"/\");\n    }\n    return loggedInUser;\n  };\n\n  const logout = () => {\n    localStorage.clear();\n    history.push(\"/\");\n  };\n\n  const startPage = () => {\n    console.log(\"start\");\n  };\n\n  const productsPage = () => {\n    console.log(\"products\");\n  };\n\n  const packsPage = () => {\n    console.log(\"packs\");\n  };\n\n  useEffect(() => {\n    getUser()\n      .then((x) => setUser(x))\n      .finally(() => {\n        getAddressUser(user).then((x) => {\n          if (x === false) {\n            setHasAddress(true);\n          } else {\n            setHasAddress(false);\n          }\n        });\n        getUserData(user)\n          .then((x) => {\n            if (x) {\n              const name = x[0].name + \" \" + x[0].last_name;\n              setFullName(name);\n            } else {\n              setError(true);\n              setErrorMessage(\n                \"Por el momento nuestros servicios se encuentran en mantenimiento, vuelve despues.\"\n              );\n            }\n          })\n          .finally(() => setLoading(false));\n      });\n  }, [fullName]);\n\n  const updatingAdrress = (status) => {\n    if (status) {\n      setHasAddress(false);\n      setLoading(false);\n    } else {\n      setLoading(false);\n      setError(true);\n      setErrorMessage(\n        \"Por el momento nuestros servicios se encuentran en mantenimiento, vuelve despues.\"\n      );\n    }\n  };\n\n  if (error) {\n    return (\n      <div className=\"container loadingFull\">\n        <div className=\"row text-center\">\n          <div className=\"col-sm-12\">\n            <h3>\n              <FontAwesomeIcon icon={faTools} size=\"lg\" />\n            </h3>\n          </div>\n          <div className=\"col-sm-12\">\n            <h3>{errorMessage}</h3>\n          </div>\n        </div>\n      </div>\n    );\n  } else if (hasAddress) {\n    return <AddressForm updateAddress={updatingAdrress} />;\n  } else {\n    return (\n      <div>\n        {loading ? (\n          <Loading></Loading>\n        ) : (\n          <div>\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\">\n              <img\n                src={Logo}\n                className=\"img-fluid\"\n                alt=\"Responsive image\"\n                width=\"80\"\n              ></img>\n              <button\n                className=\"navbar-toggler\"\n                type=\"button\"\n                data-toggle=\"collapse\"\n                data-target=\"#navbarSupportedContent\"\n                aria-controls=\"navbarSupportedContent\"\n                aria-expanded=\"false\"\n                aria-label=\"Toggle navigation\"\n              >\n                <span className=\"navbar-toggler-icon\"></span>\n              </button>\n\n              <div\n                className=\"collapse navbar-collapse\"\n                id=\"navbarSupportedContent\"\n              >\n                <ul className=\"navbar-nav ml-auto\">\n                  <li className=\"nav-item active\">\n                    <Link to=\"/bienvenido/\">\n                      <button className=\"nav-link btn btn-link\">Inicio</button>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"/bienvenido/productos\">\n                      <button className=\"nav-link btn btn-link\">\n                        Productos\n                      </button>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <Link to=\"/bienvenido/ventas\">\n                      <button className=\"nav-link btn btn-link\">Ventas</button>\n                    </Link>\n                  </li>\n                  <li className=\"nav-item\">\n                    <a className=\"nav-link disabled\" href=\"#\">\n                      |\n                    </a>\n                  </li>\n                </ul>\n                <div className=\"my-4 my-lg-0\">\n                  <div className=\"container\">\n                    <div className=\"row h-100 justify-content-center align-items-center\">\n                      <div className=\"col-sm-12\">{fullName}</div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\" my-4 my-lg-0\">\n                  <button\n                    className=\"btn btn-outline-dark\"\n                    data-toggle=\"tooltip\"\n                    onClick={() => logout()}\n                    data-placement=\"bottom\"\n                    title=\"Cerrar sesion\"\n                  >\n                    <FontAwesomeIcon icon={faPowerOff} />\n                  </button>\n                </div>\n              </div>\n            </nav>\n            <div style={{ minHeight: \"51.5rem\", paddingTop: \"3.5rem\" }}>\n              <Switch>\n                <Route path=\"/bienvenido/productos\">\n                  <Products></Products>\n                </Route>\n                <Router path=\"/bienvenido/paquetes\">\n                  <Packs></Packs>\n                </Router>\n                <Router path=\"/bienvenido/ventas\">\n                  <Sales />\n                </Router>\n                <Router path=\"/bienvenido/\">\n                  <StartPage></StartPage>\n                </Router>\n              </Switch>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n};\n\nexport default Welcome;\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport Welcome from \"./components/content/Welcome\";\n\nfunction App() {\n  document.title = \"BolsaDeCafe | Proveedores\";\n  return (\n    <Router basename=\"/proveedores\">\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/bienvenido\" component={Welcome} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}